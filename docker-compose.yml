version: "3.4"

services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - ./:/srv/app
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: mysql://root:${MYSQL_PASSWORD:-my-secret-pw}@database:3306/${MYSQL_DB:-app}?serverVersion=8.0

  messenger:
    build:
      context: .
      target: app_php
    volumes:
      - ./:/srv/app
    command: 'bin/console messenger:consume scheduler_default async --limit=30'
    environment:
      DATABASE_URL: mysql://root:${MYSQL_PASSWORD:-my-secret-pw}@database:3306/${MYSQL_DB:-app}?serverVersion=8.0
      PROXIES: ${PROXIES:-''}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    depends_on:
      - php
      - database

  nginx:
    image: nginx:alpine
    build:
      context: docker/nginx
    volumes:
      - ./:/srv/app/
      - php_socket:/var/run/php
    depends_on:
      - php
      - database

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:8.0
    environment:
      MYSQL_DB: ${MYSQL_DB:-app}
      # You should definitely change the password in production
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-my-secret-pw}
    volumes:
      # - database_data:/var/lib/mysql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      - ./docker/db/data:/var/lib/mysql:rw
###< doctrine/doctrine-bundle ###

volumes:
  php_socket:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
